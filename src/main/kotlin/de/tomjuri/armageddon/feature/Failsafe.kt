package de.tomjuri.armageddon.feature

import de.tomjuri.armageddon.util.*
import de.tomjuri.armageddon.util.Timer
import net.minecraft.block.Block
import net.minecraft.init.Blocks
import net.minecraft.util.BlockPos
import net.minecraftforge.event.world.WorldEvent
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent
import net.minecraftforge.fml.common.gameevent.TickEvent.ClientTickEvent
import net.minecraftforge.fml.common.network.FMLNetworkEvent.ClientDisconnectionFromServerEvent
import java.util.*

class Failsafe {
    val failsafeMovement = "0;0;0;0;0;0;0;0;-229.65056;-2.9999812|1;0;0;0;0;0;0;0;-229.65056;-2.9999812|2;0;0;0;0;0;0;0;-229.65056;-2.9999812|3;0;0;0;0;0;0;0;-229.65056;-2.9999812|4;0;0;0;0;0;0;0;-229.65056;-2.9999812|5;0;0;0;0;0;0;0;-229.65056;-2.9999812|6;0;0;1;0;0;0;0;-229.65056;-2.9999812|7;0;0;1;0;0;0;0;-229.65056;-2.9999812|8;0;0;1;0;0;0;0;-229.65056;-2.9999812|9;0;0;1;0;0;0;0;-229.65056;-2.9999812|10;0;0;0;0;0;0;0;-229.65056;-2.9999812|11;0;0;0;0;0;0;0;-229.65056;-2.9999812|12;0;0;0;0;0;0;0;-229.65056;-2.9999812|13;0;0;0;0;0;0;0;-229.65056;-2.9999812|14;0;0;0;0;0;0;0;-229.65056;-2.9999812|15;0;0;0;0;0;0;0;-229.65056;-2.9999812|16;0;0;0;0;0;0;0;-229.65056;-2.9999812|17;0;0;0;0;0;0;0;-229.65056;-2.9999812|18;0;0;0;0;0;0;0;-229.65056;-2.9999812|19;0;0;0;0;0;0;0;-229.65056;-2.9999812|20;0;0;0;0;0;0;0;-229.65056;-2.9999812|21;0;0;0;0;0;0;0;-229.65056;-2.9999812|22;0;0;0;0;0;0;0;-229.65056;-2.9999812|23;0;0;0;0;0;0;0;-229.65056;-2.9999812|24;0;0;0;0;0;0;0;-229.65056;-2.9999812|25;0;0;0;0;0;0;0;-225.00055;-3.5999813|26;0;0;0;0;0;0;0;-225.00055;-3.5999813|27;0;0;0;0;0;0;0;-207.00055;-4.049981|28;1;1;0;0;0;0;0;-207.00055;-4.049981|29;1;1;0;0;0;0;0;-207.00055;-4.049981|30;1;1;0;0;0;0;0;-207.00055;-4.049981|31;1;1;0;0;0;0;0;-152.85056;3.600019|32;1;1;0;0;0;0;0;-152.85056;3.600019|33;1;1;0;0;0;0;0;-141.30055;8.550019|34;0;1;0;0;0;0;0;-141.30055;8.550019|35;0;1;0;0;0;0;0;-135.30057;12.15002|36;0;1;0;0;0;0;0;-135.30057;12.15002|37;0;1;0;0;0;0;0;-129.45056;14.850019|38;0;0;0;0;0;0;0;-129.45056;14.850019|39;0;0;0;0;0;0;0;-128.70056;15.300019|40;0;0;0;0;0;0;0;-128.70056;15.300019|41;0;0;0;0;0;0;0;-128.70056;15.300019|42;0;0;0;0;0;0;0;-128.70056;15.300019|43;0;0;0;0;0;0;0;-128.70056;15.300019|44;0;0;0;0;0;0;0;-128.70056;15.300019|45;0;0;0;0;0;0;0;-128.70056;15.300019|46;0;0;0;0;0;0;0;-128.70056;15.300019|47;0;0;0;0;0;0;0;-128.70056;15.300019|48;1;0;0;0;0;0;0;-128.70056;15.300019|49;1;0;0;0;0;0;0;-129.60056;14.70002|50;1;0;0;0;0;0;0;-129.60056;14.70002|51;1;0;0;0;0;0;0;-136.05057;10.350019|52;1;0;0;1;0;0;0;-136.05057;10.350019|53;1;0;0;1;0;0;0;-143.40057;4.3500195|54;1;0;0;1;0;0;0;-143.40057;4.3500195|55;1;0;0;1;0;0;0;-148.80058;-3.4499807|56;0;0;0;1;0;0;0;-148.80058;-3.4499807|57;0;0;0;1;0;0;0;-152.55058;-7.649981|58;0;0;0;1;0;0;0;-152.55058;-7.649981|59;0;0;0;1;0;0;0;-152.85059;-7.949981|60;0;0;0;0;0;0;0;-152.85059;-7.949981|61;0;0;0;0;0;0;0;-153.00058;-7.949981|62;0;0;0;0;0;0;0;-153.00058;-7.949981|63;0;0;0;0;0;0;0;-153.00058;-7.949981|64;0;0;0;0;0;0;0;-153.00058;-7.949981|65;0;0;0;0;0;0;0;-153.30057;-7.949981|66;0;0;0;0;0;0;0;-153.30057;-7.949981|67;0;0;0;0;0;0;0;-155.55057;-7.949981|68;0;0;0;0;0;0;0;-155.55057;-7.949981|69;0;0;0;0;0;0;0;-165.00056;-7.499981|70;0;0;0;0;0;0;0;-165.00056;-7.499981|71;0;0;0;0;0;0;0;-180.45055;-6.5999804|72;0;0;0;0;0;0;0;-180.45055;-6.5999804|73;0;0;0;0;0;0;0;-193.80054;-5.6999803|74;0;0;0;0;0;0;0;-193.80054;-5.6999803|75;0;0;0;0;0;0;0;-207.75053;-4.1999803|76;0;0;0;0;0;0;0;-207.75053;-4.1999803|77;0;0;0;0;0;0;0;-215.25052;-3.44998|78;0;0;0;0;0;0;0;-215.25052;-3.44998|79;0;0;0;0;0;0;0;-218.40053;-3.1499798|80;0;0;0;0;0;0;0;-218.40053;-3.1499798|81;0;0;0;0;0;0;0;-220.05054;-3.1499798|82;0;0;0;0;0;0;0;-220.05054;-3.1499798|83;0;0;0;0;0;0;0;-222.45056;-3.1499798|84;0;0;0;0;0;0;0;-222.45056;-3.1499798|85;0;0;0;0;0;0;0;-229.50056;-3.44998|86;0;0;0;0;0;0;0;-229.50056;-3.44998|87;0;0;0;0;0;0;0;-244.35057;-3.8999803|88;0;0;0;0;0;0;0;-244.35057;-3.8999803|89;0;0;0;0;0;0;0;-273.90057;-2.9999802|90;0;0;0;0;0;0;0;-273.90057;-2.9999802|91;0;0;0;0;0;0;0;-294.75058;-1.4999803|92;0;0;0;0;0;0;0;-294.75058;-1.4999803|93;0;0;0;0;0;0;0;-303.75058;-1.3499804|94;0;0;0;0;0;0;0;-303.75058;-1.3499804|95;0;0;0;0;0;0;0;-303.75058;-1.3499804|96;0;0;0;0;0;0;0;-303.75058;-1.3499804|97;0;0;0;0;0;0;0;-303.75058;-1.3499804|98;0;0;0;0;0;0;0;-303.75058;-1.3499804|99;0;0;0;0;0;0;0;-303.75058;-1.3499804|100;0;0;0;0;0;0;0;-303.75058;-1.3499804|101;0;0;0;0;0;0;0;-303.75058;-1.3499804|102;0;0;0;0;0;0;0;-303.75058;-1.3499804|103;0;0;0;0;0;0;0;-302.40057;-1.4999803|104;0;0;0;0;0;0;0;-302.40057;-1.4999803|105;0;0;0;0;0;0;0;-294.00058;-3.8999803|106;0;0;0;0;0;0;0;-294.00058;-3.8999803|107;0;0;0;0;0;0;0;-268.50058;-10.949981|108;0;0;0;0;0;0;0;-268.50058;-10.949981|109;0;0;0;0;0;0;0;-242.55058;-18.14998|110;0;0;0;0;0;0;0;-242.55058;-18.14998|111;0;0;0;0;0;0;0;-232.35059;-20.39998|112;0;0;0;0;0;0;0;-232.35059;-20.39998|113;0;0;0;0;0;0;0;-232.35059;-20.39998|114;0;0;0;0;0;0;0;-232.35059;-20.39998|115;0;0;0;0;0;0;0;-232.35059;-20.39998|116;0;0;0;0;0;0;0;-232.35059;-20.39998|117;0;0;0;0;0;0;0;-232.35059;-20.39998|118;0;0;0;0;0;0;0;-232.35059;-20.39998|119;0;0;0;0;0;0;0;-232.35059;-20.39998|120;0;0;0;0;0;0;0;-232.35059;-20.39998"
    val failsafeMovementNoMovement = "0;0;0;0;0;0;0;0;-229.65056;-2.9999812|1;0;0;0;0;0;0;0;-229.65056;-2.9999812|2;0;0;0;0;0;0;0;-229.65056;-2.9999812|3;0;0;0;0;0;0;0;-229.65056;-2.9999812|4;0;0;0;0;0;0;0;-229.65056;-2.9999812|5;0;0;0;0;0;0;0;-229.65056;-2.9999812|6;0;0;0;0;0;0;0;-229.65056;-2.9999812|7;0;0;0;0;0;0;0;-229.65056;-2.9999812|8;0;0;0;0;0;0;0;-229.65056;-2.9999812|9;0;0;0;0;0;0;0;-229.65056;-2.9999812|10;0;0;0;0;0;0;0;-229.65056;-2.9999812|11;0;0;0;0;0;0;0;-229.65056;-2.9999812|12;0;0;0;0;0;0;0;-229.65056;-2.9999812|13;0;0;0;0;0;0;0;-229.65056;-2.9999812|14;0;0;0;0;0;0;0;-229.65056;-2.9999812|15;0;0;0;0;0;0;0;-229.65056;-2.9999812|16;0;0;0;0;0;0;0;-229.65056;-2.9999812|17;0;0;0;0;0;0;0;-229.65056;-2.9999812|18;0;0;0;0;0;0;0;-229.65056;-2.9999812|19;0;0;0;0;0;0;0;-229.65056;-2.9999812|20;0;0;0;0;0;0;0;-229.65056;-2.9999812|21;0;0;0;0;0;0;0;-229.65056;-2.9999812|22;0;0;0;0;0;0;0;-229.65056;-2.9999812|23;0;0;0;0;0;0;0;-229.65056;-2.9999812|24;0;0;0;0;0;0;0;-229.65056;-2.9999812|25;0;0;0;0;0;0;0;-225.00055;-3.5999813|26;0;0;0;0;0;0;0;-225.00055;-3.5999813|27;0;0;0;0;0;0;0;-207.00055;-4.049981|28;0;0;0;0;0;0;0;-207.00055;-4.049981|29;0;0;0;0;0;0;0;-207.00055;-4.049981|30;0;0;0;0;0;0;0;-207.00055;-4.049981|31;0;0;0;0;0;0;0;-152.85056;3.600019|32;0;0;0;0;0;0;0;-152.85056;3.600019|33;0;0;0;0;0;0;0;-141.30055;8.550019|34;0;0;0;0;0;0;0;-141.30055;8.550019|35;0;0;0;0;0;0;0;-135.30057;12.15002|36;0;0;0;0;0;0;0;-135.30057;12.15002|37;0;0;0;0;0;0;0;-129.45056;14.850019|38;0;0;0;0;0;0;0;-129.45056;14.850019|39;0;0;0;0;0;0;0;-128.70056;15.300019|40;0;0;0;0;0;0;0;-128.70056;15.300019|41;0;0;0;0;0;0;0;-128.70056;15.300019|42;0;0;0;0;0;0;0;-128.70056;15.300019|43;0;0;0;0;0;0;0;-128.70056;15.300019|44;0;0;0;0;0;0;0;-128.70056;15.300019|45;0;0;0;0;0;0;0;-128.70056;15.300019|46;0;0;0;0;0;0;0;-128.70056;15.300019|47;0;0;0;0;0;0;0;-128.70056;15.300019|48;0;0;0;0;0;0;0;-128.70056;15.300019|49;0;0;0;0;0;0;0;-129.60056;14.70002|50;0;0;0;0;0;0;0;-129.60056;14.70002|51;0;0;0;0;0;0;0;-136.05057;10.350019|52;0;0;0;0;0;0;0;-136.05057;10.350019|53;0;0;0;0;0;0;0;-143.40057;4.3500195|54;0;0;0;0;0;0;0;-143.40057;4.3500195|55;0;0;0;0;0;0;0;-148.80058;-3.4499807|56;0;0;0;0;0;0;0;-148.80058;-3.4499807|57;0;0;0;0;0;0;0;-152.55058;-7.649981|58;0;0;0;0;0;0;0;-152.55058;-7.649981|59;0;0;0;0;0;0;0;-152.85059;-7.949981|60;0;0;0;0;0;0;0;-152.85059;-7.949981|61;0;0;0;0;0;0;0;-153.00058;-7.949981|62;0;0;0;0;0;0;0;-153.00058;-7.949981|63;0;0;0;0;0;0;0;-153.00058;-7.949981|64;0;0;0;0;0;0;0;-153.00058;-7.949981|65;0;0;0;0;0;0;0;-153.30057;-7.949981|66;0;0;0;0;0;0;0;-153.30057;-7.949981|67;0;0;0;0;0;0;0;-155.55057;-7.949981|68;0;0;0;0;0;0;0;-155.55057;-7.949981|69;0;0;0;0;0;0;0;-165.00056;-7.499981|70;0;0;0;0;0;0;0;-165.00056;-7.499981|71;0;0;0;0;0;0;0;-180.45055;-6.5999804|72;0;0;0;0;0;0;0;-180.45055;-6.5999804|73;0;0;0;0;0;0;0;-193.80054;-5.6999803|74;0;0;0;0;0;0;0;-193.80054;-5.6999803|75;0;0;0;0;0;0;0;-207.75053;-4.1999803|76;0;0;0;0;0;0;0;-207.75053;-4.1999803|77;0;0;0;0;0;0;0;-215.25052;-3.44998|78;0;0;0;0;0;0;0;-215.25052;-3.44998|79;0;0;0;0;0;0;0;-218.40053;-3.1499798|80;0;0;0;0;0;0;0;-218.40053;-3.1499798|81;0;0;0;0;0;0;0;-220.05054;-3.1499798|82;0;0;0;0;0;0;0;-220.05054;-3.1499798|83;0;0;0;0;0;0;0;-222.45056;-3.1499798|84;0;0;0;0;0;0;0;-222.45056;-3.1499798|85;0;0;0;0;0;0;0;-229.50056;-3.44998|86;0;0;0;0;0;0;0;-229.50056;-3.44998|87;0;0;0;0;0;0;0;-244.35057;-3.8999803|88;0;0;0;0;0;0;0;-244.35057;-3.8999803|89;0;0;0;0;0;0;0;-273.90057;-2.9999802|90;0;0;0;0;0;0;0;-273.90057;-2.9999802|91;0;0;0;0;0;0;0;-294.75058;-1.4999803|92;0;0;0;0;0;0;0;-294.75058;-1.4999803|93;0;0;0;0;0;0;0;-303.75058;-1.3499804|94;0;0;0;0;0;0;0;-303.75058;-1.3499804|95;0;0;0;0;0;0;0;-303.75058;-1.3499804|96;0;0;0;0;0;0;0;-303.75058;-1.3499804|97;0;0;0;0;0;0;0;-303.75058;-1.3499804|98;0;0;0;0;0;0;0;-303.75058;-1.3499804|99;0;0;0;0;0;0;0;-303.75058;-1.3499804|100;0;0;0;0;0;0;0;-303.75058;-1.3499804|101;0;0;0;0;0;0;0;-303.75058;-1.3499804|102;0;0;0;0;0;0;0;-303.75058;-1.3499804|103;0;0;0;0;0;0;0;-302.40057;-1.4999803|104;0;0;0;0;0;0;0;-302.40057;-1.4999803|105;0;0;0;0;0;0;0;-294.00058;-3.8999803|106;0;0;0;0;0;0;0;-294.00058;-3.8999803|107;0;0;0;0;0;0;0;-268.50058;-10.949981|108;0;0;0;0;0;0;0;-268.50058;-10.949981|109;0;0;0;0;0;0;0;-242.55058;-18.14998|110;0;0;0;0;0;0;0;-242.55058;-18.14998|111;0;0;0;0;0;0;0;-232.35059;-20.39998|112;0;0;0;0;0;0;0;-232.35059;-20.39998|113;0;0;0;0;0;0;0;-232.35059;-20.39998|114;0;0;0;0;0;0;0;-232.35059;-20.39998|115;0;0;0;0;0;0;0;-232.35059;-20.39998|116;0;0;0;0;0;0;0;-232.35059;-20.39998|117;0;0;0;0;0;0;0;-232.35059;-20.39998|118;0;0;0;0;0;0;0;-232.35059;-20.39998|119;0;0;0;0;0;0;0;-232.35059;-20.39998|120;0;0;0;0;0;0;0;-232.35059;-20.39998"
    private val reactionMessages: List<String> = mutableListOf("lol wtf", "wtf?", "huh?", "ok?", "admin?", "show urself demon", "check??", "ok wtf??", "tf??")
    private var movement = ""
    private var timer: Timer = Timer(0)
    private var reactionIndex = 0
    private var isFailsafe = false

    fun emergency(message: String, movement: String) {
        if (isFailsafe) return
        isFailsafe = true
        Logger.error(message)
        Logger.sendWebhook("A failsafe has been triggered for ${mc.session.username}", true, message, "16711680")
        Thread {
            for (i in 0..6) {
                SoundUtil.playSound("/assets/armageddon/pipe.wav", config.failsafeVolume)
                Thread.sleep(2600)
            }
        }.start()
        timer = Timer(2000)
        this.movement = movement
        reactionIndex = 0
    }

    @SubscribeEvent
    fun onTickReaction(event: ClientTickEvent) {
        if (movement.isEmpty()) return
        if (!timer.isOver()) return
        if (reactionIndex == 0) {
            macro.stop()
            player.sendChatMessage("/ac " + reactionMessages[Random().nextInt(reactionMessages.size)])
        }
        val split = movement.split("\\|".toRegex()).dropLastWhile { it.isEmpty() }.toTypedArray()
        val split2 = split[reactionIndex].split(";".toRegex()).dropLastWhile { it.isEmpty() }.toTypedArray()
        val forward = split2[1] == "1"
        val left = split2[2] == "1"
        val backward = split2[3] == "1"
        val right = split2[4] == "1"
        val sneak = split2[5] == "1"
        val jump = split2[6] == "1"
        val attack = split2[7] == "1"
        val yaw = split2[8].toFloat()
        val pitch = split2[9].toFloat()
        if (forward) {
            KeyBindUtil.setPressed(gameSettings.keyBindForward, true)
        }
        if (left) {
            KeyBindUtil.setPressed(gameSettings.keyBindLeft, true)
        }
        if (backward) {
            KeyBindUtil.setPressed(gameSettings.keyBindBack, true)
        }
        if (right) {
            KeyBindUtil.setPressed(gameSettings.keyBindRight, true)
        }
        if (sneak) {
            KeyBindUtil.setPressed(gameSettings.keyBindSneak, true)
        }
        if (jump) {
            KeyBindUtil.jump()
        }
        if (attack) {
            KeyBindUtil.leftClick()
        }
        player.rotationYaw = yaw
        player.rotationPitch = pitch
        reactionIndex++
        if (reactionIndex >= split.size) {
            KeyBindUtil.setPressed(gameSettings.keyBindForward, false)
            KeyBindUtil.setPressed(gameSettings.keyBindLeft, false)
            KeyBindUtil.setPressed(gameSettings.keyBindBack, false)
            KeyBindUtil.setPressed(gameSettings.keyBindRight, false)
            KeyBindUtil.setPressed(gameSettings.keyBindSneak, false)
            reactionIndex = 0
            movement = ""
        }
    }

    @SubscribeEvent
    fun onDisconnect(event: ClientDisconnectionFromServerEvent) {
        if (!macro.isEnabled()) return
        emergency("You probably have been kicked from the server!", "")
    }

    @SubscribeEvent
    fun onUnloadWorld(event: WorldEvent.Unload) {
        if (!macro.isEnabled()) return
        emergency("You probably have been kicked from the server!", "")
        macro.stop()
    }

    fun nextBlockMissing(): Boolean {
        println(world.getBlockState(routeManager.getNext()).block)
        if(world.getBlockState(routeManager.getNext()).block == Blocks.cobblestone)
            return false
        emergency("Next block is missing, might be a player or a staff check!", failsafeMovementNoMovement)
        return true
    }

    @SubscribeEvent
    fun onTick0(event: ClientTickEvent) {
        if (!macro.isEnabled()) return
        val loc: BlockPos = player.position
        val top: Block = world.getBlockState(loc.add(0, 2, 0)).block
        val bottom: Block = world.getBlockState(loc.add(0, -1, 0)).block
        val leftBottom: Block = world.getBlockState(loc.add(-1, 0, 0)).block
        val leftTop: Block = world.getBlockState(loc.add(-1, 1, 0)).block
        val rightBottom: Block = world.getBlockState(loc.add(1, 0, 0)).block
        val rightTop: Block = world.getBlockState(loc.add(1, 1, 0)).block
        val frontBottom: Block = world.getBlockState(loc.add(0, 0, -1)).block
        val frontTop: Block = world.getBlockState(loc.add(0, 1, -1)).block
        val backBottom: Block = world.getBlockState(loc.add(0, 0, 1)).block
        val backTop: Block = world.getBlockState(loc.add(0, 1, 1)).block
        if (top === Blocks.stone && bottom === Blocks.stone && leftBottom === Blocks.stone && leftTop === Blocks.stone && rightBottom === Blocks.stone && rightTop === Blocks.stone && frontBottom === Blocks.stone && frontTop === Blocks.stone && backBottom === Blocks.stone && backTop === Blocks.stone) {
            emergency("You probably have been hardstone box checked!", failsafeMovementNoMovement)
        }
    }

    @SubscribeEvent
    fun onTick1(event: ClientTickEvent) {
        if (!macro.isEnabled()) return
        val radius = 20
        var bedrock = 0
        var oak = false
        for (x in -radius..radius) {
            for (y in -radius..radius) {
                for (z in -radius..radius) {
                    if (world.getBlockState(player.position.add(x, y, z))
                            .block == Blocks.bedrock
                    ) bedrock++
                    if (world.getBlockState(player.position.add(x, y, z))
                            .block == Blocks.log
                    ) oak = true
                }
            }
        }
        if (bedrock > 2 && oak) emergency("You probably have been bedrock box checked!", failsafeMovement)
    }
}
